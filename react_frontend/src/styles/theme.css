:root {
  --color-primary: #2563EB;   /* blue */
  --color-secondary: #F59E0B; /* amber */
  --color-error: #EF4444;
  --bg: #f9fafb;
  --surface: #ffffff;
  --text: #111827;
  --muted: #6b7280;

  --radius: 14px;
  --radius-sm: 10px;
  --shadow-sm: 0 4px 12px rgba(0,0,0,0.06);
  --shadow-md: 0 8px 24px rgba(0,0,0,0.08);
  --shadow-lg: 0 16px 40px rgba(0,0,0,0.12);
}

* { box-sizing: border-box; }
html, body, #root { height: 100%; }
body {
  margin: 0;
  font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, sans-serif;
  background: var(--bg);
  color: var(--text);
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 24px;
}

.btn {
  display: inline-flex;
  align-items: center;
  gap: 8px;
  padding: 10px 14px;
  border-radius: 12px;
  border: 1px solid rgba(0,0,0,0.06);
  background: linear-gradient(180deg, #fff, #f8fafc);
  color: var(--text);
  text-decoration: none;
  cursor: pointer;
  transition: transform .15s ease, box-shadow .2s ease, background .2s ease, border-color .2s ease;
  box-shadow: var(--shadow-sm);
}
.btn:hover { transform: translateY(-1px); box-shadow: var(--shadow-md); }
.btn:active { transform: translateY(0); }

.btn-primary {
  background: linear-gradient(135deg, rgba(37,99,235,0.95), rgba(37,99,235,0.85));
  color: #fff;
  border: 1px solid rgba(37,99,235,0.4);
}
.btn-primary:hover { box-shadow: 0 10px 24px rgba(37,99,235,0.25); }

.badge {
  background: rgba(37,99,235,0.08);
  color: var(--color-primary);
  border: 1px solid rgba(37,99,235,0.2);
  padding: 4px 10px;
  border-radius: 999px;
  font-size: 12px;
  font-weight: 600;
}

.input, .select, .textarea {
  width: 100%;
  padding: 12px 14px;
  border-radius: 12px;
  border: 1px solid rgba(0,0,0,0.08);
  background: #fff;
  outline: none;
  box-shadow: 0 1px 0 rgba(255,255,255,0.6) inset;
  transition: border-color .2s ease, box-shadow .2s ease;
}
.input:focus, .select:focus, .textarea:focus {
  border-color: rgba(37,99,235,0.45);
  box-shadow: 0 0 0 4px rgba(37,99,235,0.12);
}

.navbar {
  position: sticky;
  top: 0;
  z-index: 30;
  background: linear-gradient(180deg, rgba(59,130,246,0.05), rgba(255,255,255,0.6)), var(--surface);
  backdrop-filter: blur(10px);
  border-bottom: 1px solid rgba(0,0,0,0.06);
}
.nav-inner {
  display: flex;
  align-items: center;
  gap: 14px;
  padding: 14px 24px;
  max-width: 1200px;
  margin: 0 auto;
}
.brand {
  display: flex;
  align-items: center;
  gap: 10px;
  font-weight: 800;
  letter-spacing: -0.02em;
  color: var(--color-primary);
}
.brand-mark {
  width: 36px; height: 36px; border-radius: 10px;
  display: grid; place-items: center;
  background: radial-gradient(100% 100% at 50% 0%, rgba(37,99,235,0.2), rgba(37,99,235,0.06));
  border: 1px solid rgba(37,99,235,0.25);
  box-shadow: var(--shadow-sm);
  color: var(--color-primary);
}

.nav-spacer { flex: 1; }

.search {
  flex: 1;
  max-width: 520px;
  display: flex;
  align-items: center;
  gap: 8px;
  background: #fff;
  border: 1px solid rgba(0,0,0,0.06);
  border-radius: 14px;
  padding: 8px 12px;
  box-shadow: var(--shadow-sm);
}
.search input {
  border: none;
  outline: none;
  flex: 1;
  font-size: 14px;
}

.card-grid {
  display: grid;
  grid-template-columns: repeat(3, minmax(0, 1fr));
  gap: 18px;
}
@media (max-width: 1024px) {
  .card-grid { grid-template-columns: repeat(2, minmax(0, 1fr)); }
}
@media (max-width: 640px) {
  .card-grid { grid-template-columns: 1fr; }
}

.card {
  background: var(--surface);
  border: 1px solid rgba(0,0,0,0.06);
  border-radius: var(--radius);
  box-shadow: var(--shadow-sm);
  overflow: hidden;
  transition: transform .2s ease, box-shadow .2s ease, border-color .2s ease;
}
.card:hover {
  transform: translateY(-3px);
  box-shadow: var(--shadow-lg);
  border-color: rgba(37,99,235,0.25);
}
.card-header {
  padding: 14px 16px 0 16px;
}
.card-body {
  padding: 16px;
  display: grid;
  gap: 8px;
}
.card-footer {
  padding: 12px 16px 16px 16px;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.kicker {
  color: var(--muted);
  font-weight: 600;
  font-size: 12px;
  letter-spacing: .08em;
  text-transform: uppercase;
}

.title { font-size: 16px; font-weight: 700; }
.subtitle { color: var(--muted); font-size: 13px; }

.fab {
  position: fixed;
  right: 24px;
  bottom: 24px;
  width: 56px; height: 56px; border-radius: 16px;
  display: grid; place-items: center;
  background: linear-gradient(135deg, rgba(37,99,235,0.95), rgba(37,99,235,0.85));
  color: #fff;
  box-shadow: 0 16px 40px rgba(37,99,235,0.35);
  cursor: pointer;
  border: 1px solid rgba(37,99,235,0.4);
  transition: transform .15s ease, box-shadow .2s ease;
  z-index: 40;
}
.fab:hover { transform: translateY(-2px); }
.fab:active { transform: translateY(0); }

.modal-backdrop {
  position: fixed; inset: 0; background: rgba(17,24,39,0.45);
  display: grid; place-items: center; z-index: 50;
}
.modal {
  width: 96%;
  max-width: 640px;
  background: var(--surface);
  border: 1px solid rgba(0,0,0,0.08);
  border-radius: 16px;
  box-shadow: var(--shadow-lg);
  overflow: hidden;
}

.helper {
  font-size: 12px;
  color: var(--muted);
}
```

Explanation: App shell with routes and layout integration
````write file="noteshare-platform-89298-89307/react_frontend/src/AppRouter.jsx"
import { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';
import { useEffect, useState } from 'react';
import { supabase } from './lib/supabaseClient';
import Navbar from './components/Navbar';
import Dashboard from './pages/Dashboard';
import AuthPage from './pages/AuthPage';
import PreviewPage from './pages/PreviewPage';
import ProfilePage from './pages/ProfilePage';
import UploadModal from './components/UploadModal';

// PUBLIC_INTERFACE
export default function AppRouter() {
  /** This component registers routes and manages auth session for conditional UI. */
  const [session, setSession] = useState(null);
  const [showUpload, setShowUpload] = useState(false);

  useEffect(() => {
    supabase.auth.getSession().then(({ data }) => setSession(data.session || null));
    const { data: sub } = supabase.auth.onAuthStateChange((_e, s) => setSession(s));
    return () => sub.subscription.unsubscribe();
  }, []);

  return (
    <BrowserRouter>
      <Navbar
        session={session}
        onUpload={() => setShowUpload(true)}
      />
      <Routes>
        <Route path="/" element={<Dashboard session={session} onUpload={() => setShowUpload(true)} />} />
        <Route path="/login" element={session ? <Navigate to="/" replace /> : <AuthPage />} />
        <Route path="/preview/:id" element={<PreviewPage />} />
        <Route path="/profile" element={session ? <ProfilePage /> : <Navigate to="/login" replace />} />
        <Route path="*" element={<Navigate to="/" replace />} />
      </Routes>
      {showUpload && (
        <UploadModal onClose={() => setShowUpload(false)} />
      )}
      <button className="fab" aria-label="Upload PDF" onClick={() => setShowUpload(true)}>
        ‚¨Ü
      </button>
    </BrowserRouter>
  );
}
```

Explanation: Replace CRA starter App with router and theme imports
````edit file="noteshare-platform-89298-89307/react_frontend/src/App.js"      
<<<<<<< SEARCH
import React, { useState, useEffect } from 'react';
import logo from './logo.svg';
import './App.css';

// PUBLIC_INTERFACE
function App() {
  const [theme, setTheme] = useState('light');

  // Effect to apply theme to document element
  useEffect(() => {
    document.documentElement.setAttribute('data-theme', theme);
  }, [theme]);

  // PUBLIC_INTERFACE
  const toggleTheme = () => {
    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');
  };

  return (
    <div className="App">
      <header className="App-header">
        <button 
          className="theme-toggle" 
          onClick={toggleTheme}
          aria-label={`Switch to ${theme === 'light' ? 'dark' : 'light'} mode`}
        >
          {theme === 'light' ? 'üåô Dark' : '‚òÄÔ∏è Light'}
        </button>
        <img src={logo} className="App-logo" alt="logo" />
        <p>
          Edit <code>src/App.js</code> and save to reload.
        </p>
        <p>
          Current theme: <strong>{theme}</strong>
        </p>
        <a
          className="App-link"
          href="https://reactjs.org"
          target="_blank"
          rel="noopener noreferrer"
        >
          Learn React
        </a>
      </header>
    </div>
  );
}

export default App;
=======
import React from 'react';
import './styles/theme.css';
import './App.css';
import AppRouter from './AppRouter';

// PUBLIC_INTERFACE
function App() {
  /** Root component mounting Router and global styles. */
  return <AppRouter />;
}

export default App;
>>>>>>> REPLACE   
